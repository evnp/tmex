#!/usr/bin/env bash

SESSION="$1"
shift

# if 2nd arg is valid behavior...
BEHAVIOR=$(echo "$1" | awk '{print tolower($0)}')
if [[ $BEHAVIOR = "replace-existing" ]]; then
  shift
elif [[ $BEHAVIOR = "attach-existing" ]]; then
  shift
elif [[ $BEHAVIOR = "error-existing" ]]; then
  shift
else
  BEHAVIOR="replace-existing"  # default
fi
echo $BEHAVIOR

# if 1st arg is valid layout...
if [[ $1 =~ ^[0-9]+$ ]]; then
  LAYOUT="$1"
  shift

  # if layout contains zero...
  if [[ $LAYOUT =~ "0" ]]; then
    echo "layout column cannot be set to zero"
    exit 1
  fi
fi

# if 2nd arg is valid orientation...
ORIENTATION=$(echo "$1" | awk '{print tolower($0)}')
if [[ $ORIENTATION = "ltr" ]]; then
  shift
elif [[ $ORIENTATION = "ttb" ]]; then
  shift
else
  ORIENTATION="ttb"  # default
fi

NUM_COMMANDS="$#"

# if layout is not set, generate a default for number of commands
if [[ -z $LAYOUT ]]; then
  SQUARE=$(bc <<< "scale=0; sqrt($NUM_COMMANDS)")
  SQUARE=${SQUARE%.*}  # floor
  QUOTIENT=$(( $NUM_COMMANDS / $SQUARE ))
  QUOTIENT=${QUOTIENT%.*}  # floor
  REMAINDER=$(( $NUM_COMMANDS % $SQUARE ))
  LAYOUT=$(printf "%0.s$SQUARE" $(seq 1 $QUOTIENT))
  if (( $REMAINDER > 0 )); then
    LAYOUT="$REMAINDER$LAYOUT"
  fi
fi

# if number of commands exceeds sum of layout string digits...
LAYOUT_SUM=0
for (( i = 0; i < ${#LAYOUT}; i++ )); do
  (( LAYOUT_SUM += ${LAYOUT:i:1} ))
done
if (( $NUM_COMMANDS > $LAYOUT_SUM )); then
  echo "layout does not match number of commands provided"
  exit 1
fi

if [[ $BEHAVIOR = "attach-existing" ]]; then
  tmux has-session -t $SESSION 2>/dev/null
  if [ $? == 0 ]; then  # if session exists...
    tmux attach-session -t $SESSION
    exit 0
  fi
elif [[ $BEHAVIOR = "replace-existing" ]]; then
  tmux kill-session -t "$SESSION" || true  # ignore 'session does not exist' error
fi

# tmux window options
OPTIONS="{
  \"remain-on-exit\": \"on\"
}"

DIR="$(cd "$(dirname "$0")" && pwd)"
eval $($DIR/../layout.py "$SESSION" "$OPTIONS" "$LAYOUT" "$ORIENTATION" "$@")
